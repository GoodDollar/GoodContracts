{
  "contractName": "FeeFormula",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_avatar",
          "type": "address"
        }
      ],
      "name": "setAvatar",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isRegistered",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "getTxFees",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_avatar\",\"type\":\"address\"}],\"name\":\"setAvatar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRegistered\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"getTxFees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/FeeFormula.sol\":\"FeeFormula\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/AvatarGuard.sol\":{\"keccak256\":\"0x5843874a798ee5903db59aefbdab4242e753de1ded542241d4498393d784ee89\",\"urls\":[\"bzzr://f191185eb748b2ae56be24a9e0a8779479b49f8bb0cd0abd30ec68e6f3e53c6b\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/FeeFormula.sol\":{\"keccak256\":\"0xbcca9f9de669a5643dc9859cbcbd5706b7835a025369fc91016cf44d7dd1fe9d\",\"urls\":[\"bzzr://c142463b6057b0aa0c2746acaf4796e06cf75bd18e13fde3abb81418ffced8eb\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/SchemeGuard.sol\":{\"keccak256\":\"0x8b32b882222d4ba2a7fc6a29cd2920ef8d78673dbe3cdd7613908172c530eb2f\",\"urls\":[\"bzzr://882c0d8a17e5bbda9712825707058b4d18f537b6d7c480dc6e7628bc8c0575b2\"]},\"@daostack/arc/contracts/controller/Avatar.sol\":{\"keccak256\":\"0x4e4fb9d3bc21f42fbfc6a01e9f8aa483a59e9f447b0d604f55b587a81ec09ef4\",\"urls\":[\"bzzr://b0af60e651a75274a028dc4b53d06091a46ca0efa3bfb4153879e76cf86a49dc\"]},\"@daostack/arc/contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x933e92612c90f292c7b59908958b003f1a13d90b97bed0572b566353c20974dc\",\"urls\":[\"bzzr://e8050774c20b9b22636b47cdd353eaf5df72e0bca8f2b8569365be30f4eaef0c\"]},\"@daostack/arc/contracts/controller/DAOToken.sol\":{\"keccak256\":\"0x9b213e4e3ceeffcfc1c962a43b70b8d763d8091a2dd713fc1989b97bb68786e6\",\"urls\":[\"bzzr://7ba306fdbad344e01474e3ae9c37b27b64efdc1cb17ffc0f3ec1c4427fde359d\"]},\"@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0xc006c4591ec10b845a56e13f6791db2c428610953034686d52b2a934b6c8f36f\",\"urls\":[\"bzzr://d1f293a0bbaa292296a83977cb36a14048db404a32e3f6aa9bd79ea61ac3c4c3\"]},\"@daostack/arc/contracts/libs/SafeERC20.sol\":{\"keccak256\":\"0xf6727d432f67046145b078f40c1cc4f6be7b0d12a6678ecaf457edf7550d244c\",\"urls\":[\"bzzr://cd706a2dc7540d093b591a280b464256c596ddad598b68886e6db2e7958f9916\"]},\"@daostack/infra/contracts/Reputation.sol\":{\"keccak256\":\"0x3d226dac0fe7d758f0287fb28bc25fcec1f69d19888ae3a550fa49856d61c482\",\"urls\":[\"bzzr://7f219e1874d4f1aea860cc665b75015797f55f149e9bf490abab5d7ad2adfeb9\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzzr://63fc4af0d7a99a770925b96a6cf48f25fc00d30274266f82db05f30baa238267\"]}},\"version\":1}",
  "bytecode": "0x6080604081905260028054600160a060020a03199081169091556000805490911633178082559091600160a060020a03919091169082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360018054600160a060020a031916600160a060020a038381169190911791829055161561013857600160009054906101000a9004600160a060020a0316600160a060020a0316638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156100ec57600080fd5b505afa158015610100573d6000803e3d6000fd5b505050506040513d602081101561011657600080fd5b505160028054600160a060020a031916600160a060020a039092169190911790555b5061074d806101486000396000f3fe608060405234801561001057600080fd5b50600436106100815760003560e060020a900480638da5cb5b1161005f5780638da5cb5b146100be5780638f32d59b146100e2578063cb733bb9146100fe578063f2fde38b1461012d57610081565b8063086cfca81461008657806322366844146100ae578063715018a6146100b6575b600080fd5b6100ac6004803603602081101561009c57600080fd5b5035600160a060020a0316610153565b005b6100ac610412565b6100ac610595565b6100c66105ff565b60408051600160a060020a039092168252519081900360200190f35b6100ea61060e565b604080519115158252519081900360200190f35b61011b6004803603602081101561011457600080fd5b503561061f565b60408051918252519081900360200190f35b6100ac6004803603602081101561014357600080fd5b5035600160a060020a0316610638565b8033600160a060020a038216148015610263575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d60208110156101cd57600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051600160a060020a0392831692841691638da5cb5b916004808301926020929190829003018186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d602081101561025657600080fd5b5051600160a060020a0316145b806102dd575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d60208110156102cf57600080fd5b5051600160a060020a031633145b1515610334576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806106f96029913960400191505060405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038481169190911791829055604080517f8da5cb5b00000000000000000000000000000000000000000000000000000000815290519290911691638da5cb5b91600480820192602092909190829003018186803b1580156103b657600080fd5b505afa1580156103ca573d6000803e3d6000fd5b505050506040513d60208110156103e057600080fd5b50516002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555050565b600154600160a060020a0316151561048b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f417661746172206973206e6f7420736574000000000000000000000000000000604482015290519081900360640190fd5b600254600154604080517f9be2faed000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03928316602482015290519190921691639be2faed916044808301926020929190829003018186803b1580156104fa57600080fd5b505afa15801561050e573d6000803e3d6000fd5b505050506040513d602081101561052457600080fd5b5051151561059357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f536368656d65206973206e6f7420726567697374657265640000000000000000604482015290519081900360640190fd5b565b61059d61060e565b15156105a857600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b600061063282606463ffffffff61065716565b92915050565b61064061060e565b151561064b57600080fd5b6106548161067b565b50565b600080821161066557600080fd5b6000828481151561067257fe5b04949350505050565b600160a060020a038116151561069057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f6e6c792063616c6c61626c6520627920617661746172206f66206f776e6572206f72206f776e6572a165627a7a72305820105c7488ef12495f6b8a850a9fe0845d5ac9282a9d75707a20142134ac294c1c0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100815760003560e060020a900480638da5cb5b1161005f5780638da5cb5b146100be5780638f32d59b146100e2578063cb733bb9146100fe578063f2fde38b1461012d57610081565b8063086cfca81461008657806322366844146100ae578063715018a6146100b6575b600080fd5b6100ac6004803603602081101561009c57600080fd5b5035600160a060020a0316610153565b005b6100ac610412565b6100ac610595565b6100c66105ff565b60408051600160a060020a039092168252519081900360200190f35b6100ea61060e565b604080519115158252519081900360200190f35b61011b6004803603602081101561011457600080fd5b503561061f565b60408051918252519081900360200190f35b6100ac6004803603602081101561014357600080fd5b5035600160a060020a0316610638565b8033600160a060020a038216148015610263575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d60208110156101cd57600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051600160a060020a0392831692841691638da5cb5b916004808301926020929190829003018186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d602081101561025657600080fd5b5051600160a060020a0316145b806102dd575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d60208110156102cf57600080fd5b5051600160a060020a031633145b1515610334576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806106f96029913960400191505060405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038481169190911791829055604080517f8da5cb5b00000000000000000000000000000000000000000000000000000000815290519290911691638da5cb5b91600480820192602092909190829003018186803b1580156103b657600080fd5b505afa1580156103ca573d6000803e3d6000fd5b505050506040513d60208110156103e057600080fd5b50516002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555050565b600154600160a060020a0316151561048b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f417661746172206973206e6f7420736574000000000000000000000000000000604482015290519081900360640190fd5b600254600154604080517f9be2faed000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03928316602482015290519190921691639be2faed916044808301926020929190829003018186803b1580156104fa57600080fd5b505afa15801561050e573d6000803e3d6000fd5b505050506040513d602081101561052457600080fd5b5051151561059357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f536368656d65206973206e6f7420726567697374657265640000000000000000604482015290519081900360640190fd5b565b61059d61060e565b15156105a857600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b600061063282606463ffffffff61065716565b92915050565b61064061060e565b151561064b57600080fd5b6106548161067b565b50565b600080821161066557600080fd5b6000828481151561067257fe5b04949350505050565b600160a060020a038116151561069057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f6e6c792063616c6c61626c6520627920617661746172206f66206f776e6572206f72206f776e6572a165627a7a72305820105c7488ef12495f6b8a850a9fe0845d5ac9282a9d75707a20142134ac294c1c0029",
  "sourceMap": "487:384:6:-;;;;;409:55:14;;;-1:-1:-1;;;;;;409:55:14;;;;;;462:1;515:19:54;;;;;524:10;515:19;;;;462:1:14;;-1:-1:-1;;;;;582:6:54;;;;;462:1:14;;549:40:54;;462:1:14;;549:40:54;516:6:14;:16;;-1:-1:-1;;;;;;516:16:14;-1:-1:-1;;;;;516:16:14;;;;;;;;;;;547:6;:19;543:98;;615:6;;;;;;;;;-1:-1:-1;;;;;615:6:14;-1:-1:-1;;;;;615:12:14;;:14;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;615:14:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;615:14:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;615:14:14;582:10;:48;;-1:-1:-1;;;;;;582:48:14;-1:-1:-1;;;;;582:48:14;;;;;;;;;543:98;471:176;487:384:6;;;;;;",
  "deployedSourceMap": "487:384:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;487:384:6;;;;;;;;-1:-1:-1;;;487:384:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:160:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1206:160:14;-1:-1:-1;;;;;1206:160:14;;:::i;:::-;;1462:210;;;:::i;1347:137:54:-;;;:::i;659:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:54;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;765:104:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;765:104:6;;:::i;:::-;;;;;;;;;;;;;;;;1655:107:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:54;-1:-1:-1;;;;;1655:107:54;;:::i;1206:160:14:-;1266:7;400:10:1;-1:-1:-1;;;;;400:30:1;;;:74;;;;;462:4;-1:-1:-1;;;;;462:10:1;;:12;;;;;-1:-1:-1;;;462:12:1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;462:12:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;462:12:1;442:15;;;;;;;;-1:-1:-1;;;;;434:40:1;;;;442:13;;;;;:15;;;;;462:12;;442:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;442:15:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;442:15:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;442:15:1;-1:-1:-1;;;;;434:40:1;;400:74;399:118;;;;505:4;-1:-1:-1;;;;;505:10:1;;:12;;;;;-1:-1:-1;;;505:12:1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;505:12:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;505:12:1;-1:-1:-1;;;;;491:26:1;:10;:26;399:118;378:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:6:14;:16;;-1:-1:-1;;1285:16:14;-1:-1:-1;;;;;1285:16:14;;;;;;;;;;;1344:14;;;;;;;;:6;;;;;:12;;:14;;;;;;;;;;;;;;;:6;:14;;;5:2:-1;;;;30:1;27;20:12;5:2;1344:14:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1344:14:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1344:14:14;1311:10;:48;;-1:-1:-1;;1311:48:14;-1:-1:-1;;;;;1311:48:14;;;;;;;;;-1:-1:-1;;1206:160:14:o;1462:210::-;1516:6;;-1:-1:-1;;;;;1516:6:14;:19;;1508:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1575:10;;;1628:6;1575:61;;;;;;1613:4;1575:61;;;;-1:-1:-1;;;;;1628:6:14;;;1575:61;;;;;;:10;;;;;:29;;:61;;;;;;;;;;;;;;:10;:61;;;5:2:-1;;;;30:1;27;20:12;5:2;1575:61:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1575:61:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1575:61:14;1567:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:210::o;1347:137:54:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:54;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;1458:19:54;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:54;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:54;1042:10;:20;;979:90::o;765:104:6:-;821:7;847:15;:6;858:3;847:15;:10;:15;:::i;:::-;840:22;765:104;-1:-1:-1;;765:104:6:o;1655:107:54:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;778:296:53:-;836:7;929:5;;;921:14;;;;;;945:9;961:1;957;:5;;;;;;;;;778:296;-1:-1:-1;;;;778:296:53:o;1906:183:54:-;-1:-1:-1;;;;;1979:22:54;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:54;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;2065:17:54;-1:-1:-1;;;;;2065:17:54;;;;;;;;;;1906:183::o",
  "source": "pragma solidity 0.5.4;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"@daostack/arc/contracts/controller/Avatar.sol\";\n\nimport \"./SchemeGuard.sol\";\n\n/* @title Fee formula contract\n * GoodDollar token is always initiated with a given fee formula, \n * whereof getTxFees is the only assumed function\n */\ncontract AbstractFees is SchemeGuard {\n    constructor () public SchemeGuard(Avatar(0)) {}\n\n    function getTxFees(uint256 _value) public view returns (uint256);\n}\n\ncontract FeeFormula is AbstractFees {\n    using SafeMath for uint256;\n\n    /* @dev calculates 1 percentage fee of given value. Must be registered as a scheme.\n     * @param _value the value to calculate fees from\n     * @return the transactional fee for given value\n     */\n    function getTxFees(uint256 _value) public view returns (uint256) {\n        return _value.div(100);\n    }\n}",
  "sourcePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/FeeFormula.sol",
  "ast": {
    "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/FeeFormula.sol",
    "exportedSymbols": {
      "AbstractFees": [
        849
      ],
      "FeeFormula": [
        868
      ]
    },
    "id": 869,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 827,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 828,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 12394,
        "src": "24:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@daostack/arc/contracts/controller/Avatar.sol",
        "file": "@daostack/arc/contracts/controller/Avatar.sol",
        "id": 829,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 4434,
        "src": "84:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/SchemeGuard.sol",
        "file": "./SchemeGuard.sol",
        "id": 830,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 2064,
        "src": "141:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 831,
              "name": "SchemeGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2063,
              "src": "347:11:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SchemeGuard_$2063",
                "typeString": "contract SchemeGuard"
              }
            },
            "id": 832,
            "nodeType": "InheritanceSpecifier",
            "src": "347:11:6"
          }
        ],
        "contractDependencies": [
          97,
          2063,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 849,
        "linearizedBaseContracts": [
          849,
          2063,
          97,
          12502
        ],
        "name": "AbstractFees",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "410:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "406:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 835,
                      "name": "Avatar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4433,
                      "src": "399:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Avatar_$4433_$",
                        "typeString": "type(contract Avatar)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$4433",
                      "typeString": "contract Avatar"
                    }
                  }
                ],
                "id": 838,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 834,
                  "name": "SchemeGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2063,
                  "src": "387:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SchemeGuard_$2063_$",
                    "typeString": "type(contract SchemeGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "387:22:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:6"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:6"
            },
            "scope": 849,
            "src": "365:47:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "437:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:16:6"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "474:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:9:6"
            },
            "scope": 849,
            "src": "418:65:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 869,
        "src": "322:163:6"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 850,
              "name": "AbstractFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 849,
              "src": "510:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFees_$849",
                "typeString": "contract AbstractFees"
              }
            },
            "id": 851,
            "nodeType": "InheritanceSpecifier",
            "src": "510:12:6"
          }
        ],
        "contractDependencies": [
          97,
          849,
          2063,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 868,
        "linearizedBaseContracts": [
          868,
          849,
          2063,
          97,
          12502
        ],
        "name": "FeeFormula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 854,
            "libraryName": {
              "contractScope": null,
              "id": 852,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12393,
              "src": "535:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$12393",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "529:27:6",
            "typeName": {
              "id": 853,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "830:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:3:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "847:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12324,
                      "src": "847:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 860,
                  "id": 865,
                  "nodeType": "Return",
                  "src": "840:22:6"
                }
              ]
            },
            "documentation": null,
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "784:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "783:16:6"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "821:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:9:6"
            },
            "scope": 868,
            "src": "765:104:6",
            "stateMutability": "view",
            "superFunction": 848,
            "visibility": "public"
          }
        ],
        "scope": 869,
        "src": "487:384:6"
      }
    ],
    "src": "0:871:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/FeeFormula.sol",
    "exportedSymbols": {
      "AbstractFees": [
        849
      ],
      "FeeFormula": [
        868
      ]
    },
    "id": 869,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 827,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 828,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 12394,
        "src": "24:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@daostack/arc/contracts/controller/Avatar.sol",
        "file": "@daostack/arc/contracts/controller/Avatar.sol",
        "id": 829,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 4434,
        "src": "84:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/SchemeGuard.sol",
        "file": "./SchemeGuard.sol",
        "id": 830,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 2064,
        "src": "141:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 831,
              "name": "SchemeGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2063,
              "src": "347:11:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SchemeGuard_$2063",
                "typeString": "contract SchemeGuard"
              }
            },
            "id": 832,
            "nodeType": "InheritanceSpecifier",
            "src": "347:11:6"
          }
        ],
        "contractDependencies": [
          97,
          2063,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 849,
        "linearizedBaseContracts": [
          849,
          2063,
          97,
          12502
        ],
        "name": "AbstractFees",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "410:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "406:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 835,
                      "name": "Avatar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4433,
                      "src": "399:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Avatar_$4433_$",
                        "typeString": "type(contract Avatar)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$4433",
                      "typeString": "contract Avatar"
                    }
                  }
                ],
                "id": 838,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 834,
                  "name": "SchemeGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2063,
                  "src": "387:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SchemeGuard_$2063_$",
                    "typeString": "type(contract SchemeGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "387:22:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:6"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:6"
            },
            "scope": 849,
            "src": "365:47:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "437:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:16:6"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "474:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:9:6"
            },
            "scope": 849,
            "src": "418:65:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 869,
        "src": "322:163:6"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 850,
              "name": "AbstractFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 849,
              "src": "510:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFees_$849",
                "typeString": "contract AbstractFees"
              }
            },
            "id": 851,
            "nodeType": "InheritanceSpecifier",
            "src": "510:12:6"
          }
        ],
        "contractDependencies": [
          97,
          849,
          2063,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 868,
        "linearizedBaseContracts": [
          868,
          849,
          2063,
          97,
          12502
        ],
        "name": "FeeFormula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 854,
            "libraryName": {
              "contractScope": null,
              "id": 852,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12393,
              "src": "535:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$12393",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "529:27:6",
            "typeName": {
              "id": 853,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "830:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:3:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "847:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12324,
                      "src": "847:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 860,
                  "id": 865,
                  "nodeType": "Return",
                  "src": "840:22:6"
                }
              ]
            },
            "documentation": null,
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "784:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "783:16:6"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "821:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:9:6"
            },
            "scope": 868,
            "src": "765:104:6",
            "stateMutability": "view",
            "superFunction": 848,
            "visibility": "public"
          }
        ],
        "scope": 869,
        "src": "487:384:6"
      }
    ],
    "src": "0:871:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-23T09:00:37.438Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}
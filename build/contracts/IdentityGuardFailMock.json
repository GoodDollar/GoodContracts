{
  "contractName": "IdentityGuardFailMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "identity",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_identity",
          "type": "address"
        },
        {
          "name": "_avatar",
          "type": "address"
        }
      ],
      "name": "setIdentity",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"identity\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identity\",\"type\":\"address\"},{\"name\":\"_avatar\",\"type\":\"address\"}],\"name\":\"setIdentity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/mocks/IdentityGuardFailMock.sol\":\"IdentityGuardFailMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/AvatarGuard.sol\":{\"keccak256\":\"0x5843874a798ee5903db59aefbdab4242e753de1ded542241d4498393d784ee89\",\"urls\":[\"bzzr://f191185eb748b2ae56be24a9e0a8779479b49f8bb0cd0abd30ec68e6f3e53c6b\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/dao/schemes/SchemeGuard.sol\":{\"keccak256\":\"0x8b32b882222d4ba2a7fc6a29cd2920ef8d78673dbe3cdd7613908172c530eb2f\",\"urls\":[\"bzzr://882c0d8a17e5bbda9712825707058b4d18f537b6d7c480dc6e7628bc8c0575b2\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/Identity.sol\":{\"keccak256\":\"0x86e264e9114e2073a8841c9d307c5d3ef5293ddec2e496bb33a86a4813fce50f\",\"urls\":[\"bzzr://27d595c09e72c1507654bb50b90fb484d1dc10e3efa956c173de7e8a1cb624cc\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/IdentityAdminRole.sol\":{\"keccak256\":\"0x5492d861b1a8b1b9f67bdf297eb8ddab618a0ffe242bb2d942341fbc77a2433c\",\"urls\":[\"bzzr://8ec79ef0046fb1026167a45c7dcf606d960daa695745af151e6f3efed356f9ab\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/IdentityGuard.sol\":{\"keccak256\":\"0xb615488ade9e1d10f4040a60cb23529e1c6c593c83e8a9c65c0410e06cd41484\",\"urls\":[\"bzzr://36fb16ffb2ca53a8e39bbc384b446abee4c77019a7c837944d27f340fddabf08\"]},\"/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/mocks/IdentityGuardFailMock.sol\":{\"keccak256\":\"0x7f5b364d1b8a4a5eec5ba66162cd71a4b6932b789d27a614b519bd8b8892be3e\",\"urls\":[\"bzzr://961faa894f533e8e38d6945226360f4ab1b9ff0a3a4b2f99e763e79e13381618\"]},\"@daostack/arc/contracts/controller/Avatar.sol\":{\"keccak256\":\"0x4e4fb9d3bc21f42fbfc6a01e9f8aa483a59e9f447b0d604f55b587a81ec09ef4\",\"urls\":[\"bzzr://b0af60e651a75274a028dc4b53d06091a46ca0efa3bfb4153879e76cf86a49dc\"]},\"@daostack/arc/contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x933e92612c90f292c7b59908958b003f1a13d90b97bed0572b566353c20974dc\",\"urls\":[\"bzzr://e8050774c20b9b22636b47cdd353eaf5df72e0bca8f2b8569365be30f4eaef0c\"]},\"@daostack/arc/contracts/controller/DAOToken.sol\":{\"keccak256\":\"0x9b213e4e3ceeffcfc1c962a43b70b8d763d8091a2dd713fc1989b97bb68786e6\",\"urls\":[\"bzzr://7ba306fdbad344e01474e3ae9c37b27b64efdc1cb17ffc0f3ec1c4427fde359d\"]},\"@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0xc006c4591ec10b845a56e13f6791db2c428610953034686d52b2a934b6c8f36f\",\"urls\":[\"bzzr://d1f293a0bbaa292296a83977cb36a14048db404a32e3f6aa9bd79ea61ac3c4c3\"]},\"@daostack/arc/contracts/libs/SafeERC20.sol\":{\"keccak256\":\"0xf6727d432f67046145b078f40c1cc4f6be7b0d12a6678ecaf457edf7550d244c\",\"urls\":[\"bzzr://cd706a2dc7540d093b591a280b464256c596ddad598b68886e6db2e7958f9916\"]},\"@daostack/infra/contracts/Reputation.sol\":{\"keccak256\":\"0x3d226dac0fe7d758f0287fb28bc25fcec1f69d19888ae3a550fa49856d61c482\",\"urls\":[\"bzzr://7f219e1874d4f1aea860cc665b75015797f55f149e9bf490abab5d7ad2adfeb9\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzzr://63fc4af0d7a99a770925b96a6cf48f25fc00d30274266f82db05f30baa238267\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a03919091169082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600160a060020a03811615156100d257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f537570706c696564206964656e74697479206973206e756c6c00000000000000604482015290519081900360640190fd5b60018054600160a060020a031916600160a060020a0392909216919091179055610501806101016000396000f3fe608060405234801561001057600080fd5b50600436106100655760e060020a60003504632c159a1a811461006a57806360ee79381461008e578063715018a6146100be5780638da5cb5b146100c65780638f32d59b146100ce578063f2fde38b146100ea575b600080fd5b610072610110565b60408051600160a060020a039092168252519081900360200190f35b6100bc600480360360408110156100a457600080fd5b50600160a060020a038135811691602001351661011f565b005b6100bc610386565b6100726103f0565b6100d66103ff565b604080519115158252519081900360200190f35b6100bc6004803603602081101561010057600080fd5b5035600160a060020a0316610410565b600154600160a060020a031681565b8033600160a060020a03821614801561022f575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561016f57600080fd5b505afa158015610183573d6000803e3d6000fd5b505050506040513d602081101561019957600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051600160a060020a0392831692841691638da5cb5b916004808301926020929190829003018186803b1580156101f857600080fd5b505afa15801561020c573d6000803e3d6000fd5b505050506040513d602081101561022257600080fd5b5051600160a060020a0316145b806102a9575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561027157600080fd5b505afa158015610285573d6000803e3d6000fd5b505050506040513d602081101561029b57600080fd5b5051600160a060020a031633145b1515610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806104ad6029913960400191505060405180910390fd5b82600160a060020a031663223668446040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561033c57600080fd5b505afa158015610350573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03969096169590951790945550505050565b61038e6103ff565b151561039957600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b6104186103ff565b151561042357600080fd5b61042c8161042f565b50565b600160a060020a038116151561044457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f6e6c792063616c6c61626c6520627920617661746172206f66206f776e6572206f72206f776e6572a165627a7a7230582026875c315e8ce2df35c768cb6d37b92644cb566d7749be2c8a19495a0cfed3570029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100655760e060020a60003504632c159a1a811461006a57806360ee79381461008e578063715018a6146100be5780638da5cb5b146100c65780638f32d59b146100ce578063f2fde38b146100ea575b600080fd5b610072610110565b60408051600160a060020a039092168252519081900360200190f35b6100bc600480360360408110156100a457600080fd5b50600160a060020a038135811691602001351661011f565b005b6100bc610386565b6100726103f0565b6100d66103ff565b604080519115158252519081900360200190f35b6100bc6004803603602081101561010057600080fd5b5035600160a060020a0316610410565b600154600160a060020a031681565b8033600160a060020a03821614801561022f575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561016f57600080fd5b505afa158015610183573d6000803e3d6000fd5b505050506040513d602081101561019957600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051600160a060020a0392831692841691638da5cb5b916004808301926020929190829003018186803b1580156101f857600080fd5b505afa15801561020c573d6000803e3d6000fd5b505050506040513d602081101561022257600080fd5b5051600160a060020a0316145b806102a9575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561027157600080fd5b505afa158015610285573d6000803e3d6000fd5b505050506040513d602081101561029b57600080fd5b5051600160a060020a031633145b1515610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806104ad6029913960400191505060405180910390fd5b82600160a060020a031663223668446040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561033c57600080fd5b505afa158015610350573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03969096169590951790945550505050565b61038e6103ff565b151561039957600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b6104186103ff565b151561042357600080fd5b61042c8161042f565b50565b600160a060020a038116151561044457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f6e6c792063616c6c61626c6520627920617661746172206f66206f776e6572206f72206f776e6572a165627a7a7230582026875c315e8ce2df35c768cb6d37b92644cb566d7749be2c8a19495a0cfed3570029",
  "sourceMap": "100:107:22:-;;;155:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;199:1:22;515:19:54;;-1:-1:-1;;;;;;515:19:54;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:54;;;;;199:1:22;;549:40:54;;199:1:22;;549:40:54;-1:-1:-1;;;;;513:24:19;;;;505:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:8;:20;;-1:-1:-1;;;;;;577:20:19;-1:-1:-1;;;;;577:20:19;;;;;;;;;;100:107:22;;;-1:-1:-1;100:107:22;;",
  "deployedSourceMap": "100:107:22:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:107:22;;;;;;-1:-1:-1;;;100:107:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:24:19;;;:::i;:::-;;;;-1:-1:-1;;;;;308:24:19;;;;;;;;;;;;;;1966:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1966:162:19;;;;;;;;;;:::i;:::-;;1347:137:54;;;:::i;659:77::-;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1655:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:54;-1:-1:-1;;;;;1655:107:54;;:::i;308:24:19:-;;;-1:-1:-1;;;;;308:24:19;;:::o;1966:162::-;2048:7;400:10:1;-1:-1:-1;;;;;400:30:1;;;:74;;;;;462:4;-1:-1:-1;;;;;462:10:1;;:12;;;;;-1:-1:-1;;;462:12:1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;462:12:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;462:12:1;442:15;;;;;;;;-1:-1:-1;;;;;434:40:1;;;;442:13;;;;;:15;;;;;462:12;;442:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;442:15:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;442:15:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;442:15:1;-1:-1:-1;;;;;434:40:1;;400:74;399:118;;;;505:4;-1:-1:-1;;;;;505:10:1;;:12;;;;;-1:-1:-1;;;505:12:1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;505:12:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;505:12:1;-1:-1:-1;;;;;491:26:1;:10;:26;399:118;378:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:9:19;-1:-1:-1;;;;;2067:22:19;;:24;;;;;-1:-1:-1;;;2067:24:19;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2067:24:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2101:8:19;:20;;-1:-1:-1;;2101:20:19;-1:-1:-1;;;;;2101:20:19;;;;;;;;;;;-1:-1:-1;;;;1966:162:19:o;1347:137:54:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:54;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;1458:19:54;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:54;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:54;1042:10;:20;;979:90::o;1655:107::-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:54;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:54;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;2065:17:54;-1:-1:-1;;;;;2065:17:54;;;;;;;;;;1906:183::o",
  "source": "pragma solidity 0.5.4;\n\nimport \"../identity/IdentityGuard.sol\";\nimport \"../identity/Identity.sol\";\n\ncontract IdentityGuardFailMock is IdentityGuard {\n\n    constructor() public IdentityGuard(Identity(0)) {}\n}",
  "sourcePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/mocks/IdentityGuardFailMock.sol",
  "ast": {
    "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/mocks/IdentityGuardFailMock.sol",
    "exportedSymbols": {
      "IdentityGuardFailMock": [
        3419
      ]
    },
    "id": 3420,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3405,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:22"
      },
      {
        "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/IdentityGuard.sol",
        "file": "../identity/IdentityGuard.sol",
        "id": 3406,
        "nodeType": "ImportDirective",
        "scope": 3420,
        "sourceUnit": 3345,
        "src": "24:39:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/Identity.sol",
        "file": "../identity/Identity.sol",
        "id": 3407,
        "nodeType": "ImportDirective",
        "scope": 3420,
        "sourceUnit": 3076,
        "src": "64:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3408,
              "name": "IdentityGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3344,
              "src": "134:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityGuard_$3344",
                "typeString": "contract IdentityGuard"
              }
            },
            "id": 3409,
            "nodeType": "InheritanceSpecifier",
            "src": "134:13:22"
          }
        ],
        "contractDependencies": [
          97,
          3344,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3419,
        "linearizedBaseContracts": [
          3419,
          3344,
          97,
          12502
        ],
        "name": "IdentityGuardFailMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3417,
              "nodeType": "Block",
              "src": "203:2:22",
              "statements": []
            },
            "documentation": null,
            "id": 3418,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "199:1:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3412,
                      "name": "Identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3075,
                      "src": "190:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Identity_$3075_$",
                        "typeString": "type(contract Identity)"
                      }
                    },
                    "id": 3414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "190:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Identity_$3075",
                      "typeString": "contract Identity"
                    }
                  }
                ],
                "id": 3415,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3411,
                  "name": "IdentityGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3344,
                  "src": "176:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_IdentityGuard_$3344_$",
                    "typeString": "type(contract IdentityGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "176:26:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:2:22"
            },
            "returnParameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:22"
            },
            "scope": 3419,
            "src": "155:50:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3420,
        "src": "100:107:22"
      }
    ],
    "src": "0:207:22"
  },
  "legacyAST": {
    "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/mocks/IdentityGuardFailMock.sol",
    "exportedSymbols": {
      "IdentityGuardFailMock": [
        3419
      ]
    },
    "id": 3420,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3405,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:22"
      },
      {
        "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/IdentityGuard.sol",
        "file": "../identity/IdentityGuard.sol",
        "id": 3406,
        "nodeType": "ImportDirective",
        "scope": 3420,
        "sourceUnit": 3345,
        "src": "24:39:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/madsjorgensen/Documents/Work/GoodContracts/contracts/identity/Identity.sol",
        "file": "../identity/Identity.sol",
        "id": 3407,
        "nodeType": "ImportDirective",
        "scope": 3420,
        "sourceUnit": 3076,
        "src": "64:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3408,
              "name": "IdentityGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3344,
              "src": "134:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityGuard_$3344",
                "typeString": "contract IdentityGuard"
              }
            },
            "id": 3409,
            "nodeType": "InheritanceSpecifier",
            "src": "134:13:22"
          }
        ],
        "contractDependencies": [
          97,
          3344,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3419,
        "linearizedBaseContracts": [
          3419,
          3344,
          97,
          12502
        ],
        "name": "IdentityGuardFailMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3417,
              "nodeType": "Block",
              "src": "203:2:22",
              "statements": []
            },
            "documentation": null,
            "id": 3418,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "199:1:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3412,
                      "name": "Identity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3075,
                      "src": "190:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Identity_$3075_$",
                        "typeString": "type(contract Identity)"
                      }
                    },
                    "id": 3414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "190:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Identity_$3075",
                      "typeString": "contract Identity"
                    }
                  }
                ],
                "id": 3415,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3411,
                  "name": "IdentityGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3344,
                  "src": "176:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_IdentityGuard_$3344_$",
                    "typeString": "type(contract IdentityGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "176:26:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:2:22"
            },
            "returnParameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:22"
            },
            "scope": 3419,
            "src": "155:50:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3420,
        "src": "100:107:22"
      }
    ],
    "src": "0:207:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-23T09:09:20.525Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}